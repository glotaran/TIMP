
R version 2.5.0 (2007-04-23)
Copyright (C) 2007 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

>     
> ########################################
> ## Data and model of Delmar Larsen  
> ######################################## 
> 
> ##############################
> ## load TIMP
> ##############################
> 
> require(TIMP)
Loading required package: TIMP
Loading required package: tcltk
Loading Tcl/Tk interface ... done
Loading required package: vcd
Loading required package: MASS
Loading required package: grid
Loading required package: colorspace
Loading required package: fields
fields is loaded use help(fields) for an overview of this library
Loading required package: gplots
Loading required package: gtools
Loading required package: gdata

Attaching package: 'gplots'


	The following object(s) are masked from package:stats :

	 lowess 

Loading required package: splines
[1] TRUE
> 
> ## read data 
> delDat<-readData("PCP1.-50000fs.PP.txt")
Read 1 item
Read 43351 items
> 
> ## scale wavelength axis 
> delDatP<-preProcess(data = delDat, scalx2 = c(1.19, 404))
> 
> ## set up the K matrix.  
> 
> ## initialize 2 5x5 arrays to 0 
> ## replace 5 with the number of columns/rows in the
> ## desired K matrix 
>  
> delK <- array(0, dim=c(5,5,2))
> 
> ## the matrix is indexed: 
> ## delK[ ROW K MATRIX, COL K MATRIX, matrix number] 
> 
> ## in the first matrix, put the label of compartments 
> ## that are non-zero 
> 
> delK[2,1,1] <- 1
> delK[5,1,1] <- 1
> delK[3,2,1] <- 2
> delK[5,2,1] <- 2
> delK[4,3,1] <- 3
> delK[5,3,1] <- 3
> delK[5,4,1] <- 4
> delK[5,5,1] <- 5
> 
> 
> ## in the second matrix, put the indices of any branching
> ## parameters you want; these are the parameter values given
> ## in the vector kinscal and then fixed  
> 
> delK[2,1,2] <- 1
> delK[5,1,2] <- 3
> delK[2,2,2] <- 2
> delK[3,2,2] <- 4
> delK[5,2,2] <- 5
> delK[3,3,2] <- 2
> delK[4,3,2] <- 5
> delK[5,3,2] <- 7
> delK[4,4,2] <- 2
> 
> ## print out the resulting array to make sure it's right
> 
> delK
, , 1

     [,1] [,2] [,3] [,4] [,5]
[1,]    0    0    0    0    0
[2,]    1    0    0    0    0
[3,]    0    2    0    0    0
[4,]    0    0    3    0    0
[5,]    1    2    3    4    5

, , 2

     [,1] [,2] [,3] [,4] [,5]
[1,]    0    0    0    0    0
[2,]    1    2    0    0    0
[3,]    0    4    2    0    0
[4,]    0    0    5    2    0
[5,]    3    5    7    0    0

> 
> ##, , 1
> ##
> ##     [,1] [,2] [,3] [,4] [,5]
> ## [1,]    0    0    0    0    0
> ## [2,]    1    0    0    0    0
> ## [3,]    0    2    0    0    0
> ## [4,]    0    0    3    0    0
> ## [5,]    1    2    3    4    5
> ##
> ## , , 2
> ##
> ##     [,1] [,2] [,3] [,4] [,5]
> ## [1,]    0    0    0    0    0
> ## [2,]    1    2    0    0    0
> ## [3,]    0    4    2    0    0
> ## [4,]    0    0    5    2    0
> ## [5,]    3    5    7    0    0
> 
> ## in setting up the model, put the branching parameters
> ## in kinscal and then fix their values. 
> 
> delMod<-initModel(mod_type="kin",
+ kinpar=c(25,5,.9731,.2489,.013), 
+ kinscal=c(.73,.05,.3,.75,.24,.47,.4), 
+ irfpar=c(-.096, .022), kmat=delK, jvec=c(1,0,0,0,0),
+ seqmod = FALSE,
+ lambdac=500,
+ positivepar=c("kinpar"),
+ weightpar=list(c(NA,NA,460,525,.3)),
+ clp0=list(list(comp=5, low=250,high=550), list(comp=5, 
+ low=600,high=800)), lclp0 = TRUE,
+ fixed=list(kinpar=c(1,2),kinscal=c(1:7)))
> 
> serRes<-fitModel(list(delDatP), list(delMod), 
+ opt=kinopt(iter=1, linrange = 20,
+ makeps = "ser", notraces = TRUE, 
+ selectedtraces = seq(1, delDatP@nl, by=20),
+ xlab = "time (ps)", ylab = "wavelength"))
1586859 :  -0.09600000  0.02200000 -0.02726843 -1.39070407 -4.34280592 
  It.   1, fac=           1, eval (no.,total): ( 1,  1): new dev = 942854
942854.3 :  -0.09539384  0.04612688  1.46257672 -4.16775173 -3.44116095 
Warning message:
number of iterations exceeded maximum of 1 
> 
