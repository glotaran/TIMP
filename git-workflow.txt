In this repository there are 3 primary branches.
To see the current branches, issue the command:
$ git branch-a
>> start output
 * develop
 master
 remotes/r-forge-svn
<< end output

The information about remotes/r-forge-svn is found in <root>/.git/config, it contains the lines:
>> start output
[svn-remote "r-forge"]
  url = svn+ssh://<developerid>@svn.r-forge.r-project.org/svnroot/timp/
 fetch = :refs/remotes/r-forge-svn
<< end output

We always *only* work on the development branch, and branches off the development branch, never directly on master or god forbid remotes/r-forge-svn.
To switch to the development branch, issue the command:
$ git checkout develop
Normal git operations consiting of commands:
$ git add <new or modified file>
$ git commit .

Every now and then we merge this back into master.
A good workflow for this is documented here:
http://cameron.bracken.bz/git-with-r-forge
http://stackoverflow.com/questions/629048/git-svn-dcommit-error-restart-the-commit/629067#629067

In brief:
$ git checkout develop 								# ensure we are on the develop branch
$ git checkout -b backup 							# make a backup of the develop branch so we can work with this branch in subsequent steps rather than mess with develop
$ git checkout master   							# switch back to master branch
# Next step is optional (only needed if you messed up the master branch or don't trust that master and remotes/r-forge-svn are in the same state)
$ git reset --hard <this is the revision of the last svn-id> 			# clean up master to make the svn merge easier
$ git svn fetch r-forge    							# this should update to the current version on the r-forge server
$ git rebase master backup  							# may get a conflict here, fix and commit
... 										# after conflict is fixed and commited
$ git checkout master 
$ git merge backup --ff  							# merge in your local commits
$ git svn dcommit        							# push back to the svn
$ git checkout develop								# switch back to develop branch
# If you want to clean up (or you could just make a new backup branch every time you want to merge develop and master)
$ git branch -D backup