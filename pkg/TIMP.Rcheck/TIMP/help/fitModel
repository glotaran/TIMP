fitModel                package:TIMP                R Documentation

_P_e_r_f_o_r_m_s _o_p_t_i_m_i_z_a_t_i_o_n _o_f (_p_o_s_s_i_b_l_y _m_u_l_t_i_d_a_t_a_s_e_t) _m_o_d_e_l_s.

_D_e_s_c_r_i_p_t_i_o_n:

     Performs optimization of (possibly multidataset) models and 
     outputs plots and files representing the fit of the model to the
     data.

_U_s_a_g_e:

     fitModel(data, modspec=list(), datasetind = vector(), modeldiffs = list(), 
                     opt = opt() )

_A_r_g_u_m_e_n_t_s:

    data: list of data objects of class 'dat'

 modspec: list whose elements are models of class 'dat'  describing the
          models as results from a call to the function 'initModel' 

datasetind: vector that has the same length as 'data'; for each dataset
          in 'data' specify the model it should have as  an index into
          'modspec'; default mapping is that all datasets  use the
          first model given in 'modspec'  

modeldiffs: list whose elements specify any dataset-specific  model
          differences. 

        _d_s_c_a_l list of lists specifying linear scaling relations between
              datasets; each list has elements 'to, from, value'.  The
             index of the  dataset to be scaled is given in 'to'; the
             index of the dataset on  which the scaling is to be based
             is given in 'from'.  The starting  value parameterizing
             the relationship is given as 'value'. For  example, 'dscal
             = list(list(to=2,from=1,value=.457))'.     

        _t_h_r_e_s_h numeric describing the tolerance with which clp from 
             different datasets are to be considered as equal.   For
             instance, for  two datasets containing data at 750 and 751
             nm, respectively,  'thresh=1.5' will equate the clp at 750
             and 751 between datasets. Specify a negative value of
             'thresh' to estimate clp per-dataset.  See Section 2.2 of
             the paper in the references for the model equations.  

        _f_r_e_e list of lists specifying individual  parameters to free
             for a given dataset. each sublist has  named elements 

           _w_h_a_t character string naming parameter type, e.g., "kinpar"

           _i_n_d vector of indices into parameter vector or list, e.g.,
                'c(2,3)' or '4'

           _d_a_t_a_s_e_t dataset index in which parameter is to be freed

           _s_t_a_r_t starting value for freed parameter

             For example, 'free = list( list(what = "irfpar", ind = 1,
             dataset = 2, start=-.1932), list(what = "kinpar", ind = 5,
             dataset = 2, start=.0004), list(what = "kinpar", ind = 4,
             dataset = 2, start= .0159))'. 

        _r_e_m_o_v_e list of lists specifying individual  parameters to
             remove from  parameter groups for a given dataset. each
             sublist has  named elements 

           _w_h_a_t character string naming parameter type, e.g., "kinpar"

           _d_a_t_a_s_e_t dataset index in which parameter group is to be
                removed

           _i_n_d vector of indices into parameter vector or list, e.g.,
                'c(2,3)' or '4' where parameter should be removed 


        _a_d_d list of lists specifying individual  parameters to add to
             parameter groups for a given dataset. each sublist has 
             named elements 

           _w_h_a_t character string naming parameter type, e.g., "kinpar"

           _d_a_t_a_s_e_t dataset index in which parameter group is to change

           _s_t_a_r_t starting value for added parameter

           _i_n_d vector of indices into parameter vector or list, e.g.,
                'c(2,3)' or '4' where parameter should be added. 


        _c_h_a_n_g_e list of lists specifying entire parameter groups to
             change  for a given dataset. each sublist has named
             elements 

           _w_h_a_t character string naming parameter type, e.g., "kinpar"

           _d_a_t_a_s_e_t dataset index in which parameter group is to change

           _s_p_e_c new specification that in initModel would follow
                "what",  e.g., for 'c(.1, .3)' if what="kinpar"

        _r_e_l list of lists specifying parameters to relate between
             datasets each sublist has named elements 

           _w_h_a_t_1 character string naming parameter type to be
                determined in  relation to some other parameter type ,
                e.g., "kinpar"

           _w_h_a_t_2 character string naming parameter type on which
                another  parameter type is to depend, e.g., "kinpar"

           _i_n_d_1 vector of indices into parameter vector or  list, e.g.,
                'c(2,3)' or '4' of the dependent parameter.  .in -3

           _i_n_d_2 vector or numeric of indices into parameter vector or 
                list, e.g., 'c(2,3)' or '4' of the parameter on which
                another  parameter will depend 

           _d_a_t_a_s_e_t_1 dataset index of the dependent parameter

           _d_a_t_a_s_e_t_2 dataset index of the parameter on which another
                parameter will depend

           _r_e_l optional character string describing functional
                relationship  between parameters; defaults to "lin" for
                linear relationship 

           _s_t_a_r_t starting value or vector of values parameterizing 
                relationship between parameters   

     opt: Object of class 'kinopt' or 'specopt' specifying  fitting and
          plotting options. 

_D_e_t_a_i_l_s:

     This function applies the 'nls' function internally to  optimize
     nonlinear parameters and to solve for conditionally linear
     parameters (clp) via the partitioned variable projection
     algorithm.

_V_a_l_u_e:

     list with element 'toPlotter'.   

toPlotter: is a list containing all arguments used by the plotting 
          function; it is used to regenerate plots and other output by
          the  'examineFit'  function

     normal-bracket116bracket-normal

_A_u_t_h_o_r(_s):

     Katharine M. Mullen, Ivo H. M. van Stokkum

_R_e_f_e_r_e_n_c_e_s:

     Mullen KM, van Stokkum IHM (2007).  ``TIMP: an R package for
     modeling multi-way spectroscopic measurements.'' Journal of
     Statistical Software, 18(3). <URL:
     http://www.jstatsoft.org/v18/i03/.>

_S_e_e _A_l_s_o:

     'readData', 'initModel',  'examineFit'

